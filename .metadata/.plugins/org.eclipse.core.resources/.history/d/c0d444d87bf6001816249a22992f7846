package franquias;

import produtos.ClasseProduto;
import produtos.NumeroLimiteExcedido;
import produtos.ProdutoJaCadastrado;

public class RepositorioFranquiasArray implements RepositorioFranquias {
	private Franquia[] lojas = new Franquia[20];
	private int countLojas;

	public RepositorioFranquiasArray() {
		Franquia[] loja = new Franquia[20];
	}

	public void inserir(Franquia lojas) throws CodigoCadastradoException {
		if (!this.existe(lojas.getCodigo())) {
			boolean stop = false;
			for (int i = 0; i <= this.lojas.length && !stop; i++) {
				if (i == this.lojas.length) {
					// ERRO
				} else {
					if (this.lojas[i] != null) {
						continue;
					} else {
						this.lojas[i] = lojas;
						this.countLojas = i;
						stop = true;
					}
				}
			}
		} else {
			throw new CodigoCadastradoException();
		}

	}

	public boolean existe(int codigo) {
		for (int i = 0; i < this.lojas.length; i++) {
			if (this.lojas[i].getCodigo() == codigo && lojas[i] != null) {
				return true;
			} else {
				continue;
			}
		}
		return false;
	}

	public void remover(int codigo) throws CodigoInexistenteException {
		boolean resultado = this.existe(codigo);
		if (resultado == true) {
			boolean stop = false;
			for (int i = 0; i < this.lojas.length && stop == false; i++) {
				if (this.lojas[i].getCodigo() == codigo) {
					this.lojas[i] = null;
					for (int j = i + 1; j < this.lojas.length; j++) {
						this.lojas[i] = this.lojas[j];
					}
					this.countLojas -= 1;
					stop = true;
				}
			}
		} else {
			throw new CodigoInexistenteException();
		}
	}

	public void atualizar(Franquia lojas) {
		if (this.existe(lojas.getCodigo())) {
			boolean stop = false;
			for (int i = 0; i < this.lojas.length && stop == false; i++) {
				if (this.lojas[i].getCodigo() == lojas.getCodigo()) {
					this.lojas[i] = lojas;
					stop = true;
				}
			}
		} 
	}

	public Franquia procurar(int codigo) throws CodigoInexistenteException {
		boolean resultado = this.existe(codigo);
		if (resultado == true) {
			boolean stop = false;
			Franquia procurada = null;
			for (int i = 0; i < this.lojas.length && stop == false; i++) {
				if (this.lojas[i].getCodigo() == codigo) {
					stop = true;
					procurada = lojas[i];
				}
			}
			return procurada;
		} else {
			throw new CodigoInexistenteException();
		}
	}

	public void atualizarProduto(Franquia lojas, ClasseProduto produto) throws NumeroLimiteExcedido, ProdutoJaCadastrado {
		if (this.existe(lojas.getCodigo())) {
			boolean stop = false;
			for (int i = 0; i < this.lojas.length && stop == false; i++) {
				this.lojas[i].produtos.inserir(produto); 
				
			}
		} 
	}
}
